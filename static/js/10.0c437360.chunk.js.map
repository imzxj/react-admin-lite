{"version":3,"sources":["pages/TradeQuery/index.tsx"],"names":["FormItem","Item","Option","RangePicker","WrappedSearchForm","create","observer","props","form","getFieldDecorator","validateFields","loading","useContext","stores","layout","onSubmit","ev","preventDefault","err","values","label","initialValue","style","width","allowClear","value","showTime","format","placeholder","type","htmlType","columns","title","dataIndex","key","align","render","status","10","20","30","40","50","ORDER_STATUS_MAP","openLoading","closeLoading","state","useLocalStore","data","pagination","useEffect","query","params","axios","get","results","then","total","background","padding","dashed","rowKey","dataSource","onChange","filters","sorter","pager","current","pageSize"],"mappings":"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","file":"static/js/10.0c437360.chunk.js","sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport { Form, Input, Button, DatePicker, Select, Table, Badge, Divider } from 'antd'\nimport { FormComponentProps } from 'antd/lib/form'\nimport { ColumnProps } from 'antd/lib/table'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport * as stores from '../../store'\nimport axios from '../../common/axios'\nimport { ORDER_STATUS_MAP } from '../../common/const'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\nconst { RangePicker } = DatePicker\n\n/*---------- 子组件区域 ----------*/\n\ninterface ISearchFormProps extends FormComponentProps {\n  onSubmit: (params: any) => any\n}\n\nconst SearchForm: React.FC<ISearchFormProps> = props => {\n  const { getFieldDecorator, validateFields } = props.form\n  const { loading } = useContext(stores.uiStore)\n  const handleSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    ev.preventDefault()\n    validateFields((err, values) => {\n      if (!err) {\n        props.onSubmit(values)\n      }\n    })\n  }\n\n  return (\n    <Form layout=\"inline\" onSubmit={handleSubmit}>\n      <FormItem label=\"产品名称\">\n        {getFieldDecorator('productCode', {\n          initialValue: '0'\n        })(\n          <Select style={{ width: 120 }} allowClear>\n            <Option value=\"0\">全部</Option>\n            <Option value=\"1\">product-1</Option>\n            <Option value=\"2\">product-2</Option>\n            <Option value=\"3\">product-3</Option>\n          </Select>\n        )}\n      </FormItem>\n      <FormItem label=\"合作商订单号\">{getFieldDecorator('merOrderNo')(<Input />)}</FormItem>\n      <FormItem label=\"本地订单号\">{getFieldDecorator('payOrderId')(<Input />)}</FormItem>\n      <FormItem label=\"商户编号\">{getFieldDecorator('roadCode')(<Input />)}</FormItem>\n      <FormItem label=\"商户名称\">{getFieldDecorator('merName')(<Input />)}</FormItem>\n      <FormItem label=\"交易时间\">\n        {getFieldDecorator('datetime')(\n          <RangePicker\n            showTime={{ format: 'HH:mm' }}\n            format=\"YYYY-MM-DD HH:mm\"\n            placeholder={['', '']}\n          />\n        )}\n      </FormItem>\n      <FormItem>\n        <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n          查询\n        </Button>\n      </FormItem>\n    </Form>\n  )\n}\n\nconst WrappedSearchForm = Form.create<ISearchFormProps>()(observer(SearchForm))\n\n/*---------- 父组件区域 ----------*/\n\nconst columns: ColumnProps<unknown>[] = [\n  {\n    title: '合作商订单号',\n    dataIndex: 'merOrderNo',\n    key: 'merOrderNo'\n  },\n  {\n    title: '本地订单号',\n    dataIndex: 'payOrderId',\n    key: 'payOrderId'\n  },\n  {\n    title: '商户编号',\n    dataIndex: 'roadCode',\n    key: 'roadCode'\n  },\n  {\n    title: '商户名称',\n    dataIndex: 'merName',\n    key: 'merName'\n  },\n  {\n    title: '交易金额（元）',\n    dataIndex: 'amount',\n    align: 'right',\n    width: 140,\n    key: 'amount'\n  },\n  {\n    title: '交易时间',\n    dataIndex: 'createTime',\n    align: 'center',\n    key: 'createTime'\n  },\n  {\n    title: '交易状态',\n    dataIndex: 'status',\n    align: 'left',\n    render: (status: number) => {\n      return (\n        <div>\n          <Badge\n            status={\n              ({\n                10: 'default',\n                20: 'warning',\n                30: 'processing',\n                40: 'error',\n                50: 'success'\n              } as Record<number, any>)[status]\n            }\n          />\n          {ORDER_STATUS_MAP[status]}\n        </div>\n      )\n    },\n    key: 'status'\n  }\n]\n\ninterface ITradeQueryState {\n  data: any\n  pagination: any\n}\n\nconst TradeQuery: React.FC = props => {\n  const { loading, openLoading, closeLoading } = useContext(stores.uiStore)\n  const state = useLocalStore(\n    () =>\n      ({\n        data: [],\n        pagination: {}\n      } as ITradeQueryState)\n  )\n\n  useEffect(() => {\n    query()\n    // eslint-disable-next-line\n  }, [])\n\n  const handleTableChange = (pagination: any, filters: any, sorter: any) => {\n    let pager = { ...state.pagination }\n    pager.current = pagination.current\n    state.pagination = pager\n    query({\n      results: pagination.pageSize\n    })\n  }\n\n  const query = (params = {}) => {\n    openLoading()\n    axios\n      .get('/trade-query', {\n        params: {\n          results: 10,\n          ...params\n        }\n      })\n      .then(data => {\n        const pagination = { ...state.pagination }\n        pagination.total = 200\n        state.data = data\n        state.pagination = pagination\n        closeLoading()\n      })\n  }\n\n  return (\n    <div style={{ background: '#fff', padding: '24px' }}>\n      <WrappedSearchForm onSubmit={query} />\n      <Divider dashed />\n      <Table\n        loading={loading}\n        columns={columns}\n        rowKey=\"id\"\n        dataSource={state.data}\n        pagination={state.pagination}\n        onChange={handleTableChange}\n      />\n    </div>\n  )\n}\n\nexport default observer(TradeQuery)\n"],"sourceRoot":""}