{"version":3,"sources":["mock/index.ts","common/utils.ts","store/userStore/index.ts","store/uiStore/index.ts","common/const.ts","plugins/axios.ts","views/home/information/index.tsx","views/home/order-query/index.tsx","views/home/trade-query/index.tsx","views/home/reports/index.tsx","views/home/index.tsx","views/login/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Mock","setup","timeout","mock","t","account","name","merchantId","roadCode","merOrderNo","payOrderId","merName","createTime","is_first_run","store","fields","UserStore","observable","action","data","userinfo","createContext","autorun","forEach","el","localStorage","getItem","JSON","parse","setItem","stringify","UiStore","loading","ORDER_STATUS_MAP","10","20","30","40","50","PRODUCT_TYPE","axios","defaults","withCredentials","baseURL","interceptors","response","use","console","log","config","url","error","message","Promise","reject","columns","title","dataIndex","key","width","render","type","color","text","status","observer","props","useContext","stores","openLoading","closeLoading","state","useLocalStore","dataSource","useEffect","query","a","get","params","id","product","gutter","xs","span","xl","hoverable","bodyStyle","height","marginBottom","bordered","className","overflow","rowKey","expandedRowRender","record","roadList","road","i","length","push","size","pagination","expandRowByClick","placement","arrowPointAtCenter","extra","itemLayout","map","renderItem","item","Item","Meta","avatar","style","backgroundColor","Math","round","random","href","description","FormItem","orderNo","background","padding","layout","onSubmit","ev","preventDefault","onChange","target","value","prefix","placeholder","disabled","htmlType","dashed","Option","RangePicker","WrappedSearchForm","create","form","getFieldDecorator","validateFields","err","values","label","initialValue","allowClear","showTime","format","align","results","then","total","filters","sorter","pager","current","pageSize","Reports","dot","cursor","Array","fill","index","onClick","window","location","Date","getDate","Header","Sider","Content","cleanUserinfo","passwordModalVisible","collapsed","logout","Object","keys","to","trigger","collapsible","theme","mode","defaultSelectedKeys","pathname","history","marginRight","src","overlay","Divider","margin","path","component","Information","OrderQuery","TradeQuery","visible","okText","cancelText","onOk","onCancel","WrappedLogin","saveUserinfo","login","password","post","res","rules","required","valuePropName","App","Login","Home","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.839660da.chunk.js","sourcesContent":["import Mock from \"mockjs\";\n\nMock.setup({\n  // 模拟延迟（200-600毫秒之间）\n  timeout: \"200-600\"\n});\n\nMock.mock(/login/, {\n  t: {\n    account: \"362896731@qq.com\",\n    name: \"admin\",\n    merchantId: \"10021\"\n  }\n});\n\nMock.mock(/getMerchantInfo/, {\n  t: {\n    \"account|3-8\": [\n      {\n        name: \"@cname\",\n        account: \"@email\"\n      }\n    ],\n    \"product|5-10\": [\n      {\n        \"productId|5\": /\\d/,\n        \"productType|1\": [10, 20, 30, 40, 50],\n        \"status|0-1\": 0,\n        \"road|5-10\": [\n          {\n            name: \"测试商户\",\n            roadCode: /10021\\d{6}/,\n            \"status|0-1\": 0\n          }\n        ]\n      }\n    ]\n  }\n});\n\nMock.mock(/order-query/, {\n  t: {}\n});\n\nMock.mock(/trade-query/, {\n  \"t|10\": [\n    {\n      \"id|+1\": 0,\n      merOrderNo: /\\d{12}/,\n      payOrderId: /\\d{12}/,\n      roadCode: /10021\\d{6}/,\n      merName: \"@word()\",\n      \"amount|10-10000.2-2\": 10,\n      \"status|1\": [10, 20, 30, 40, 50],\n      createTime: \"@date('yyyy-MM-dd hh:mm:ss')\"\n    }\n  ]\n});\n","import { autorun } from 'mobx'\n\n/**\n * 随机生成一个HSL格式颜色\n */\nfunction randomColor() {\n  return `hsl(${Math.round(Math.random() * 360)}, 50%, 50%)`\n}\n\n/**\n * mobx 状态持久化\n */\nlet is_first_run = true\nfunction mobxPersist<T, K extends keyof T>(store: T, fields: K[]): T {\n  autorun(() => {\n    fields.forEach(el => {\n      if (is_first_run) {\n        const data = localStorage.getItem(el as string)\n        data && (store[el] = JSON.parse(data))\n      }\n      localStorage.setItem(el as string, JSON.stringify(store[el]))\n    })\n    is_first_run = false\n  })\n  return store\n}\n\nexport { randomColor, mobxPersist }\n","import { createContext } from 'react'\nimport { observable, action } from 'mobx'\nimport { mobxPersist } from '../../common/utils'\n\nexport class UserStore {\n  @observable userinfo: any = {}\n\n  @action\n  saveUserinfo = (data: any) => {\n    this.userinfo = data\n  }\n\n  @action\n  cleanUserinfo = () => {\n    this.userinfo = {}\n  }\n}\n\nexport default createContext(mobxPersist(new UserStore(), ['userinfo']))\n","import { createContext } from 'react'\nimport { observable, action } from 'mobx'\n\nclass UiStore {\n  @observable loading: boolean = false\n\n  @action\n  openLoading = () => {\n    this.loading = true\n  }\n\n  @action\n  closeLoading = () => {\n    this.loading = false\n  }\n}\n\nexport default createContext(new UiStore())\n","// const BASE_URL = \"http://47.92.168.221:9342/merchant/\";\n// const BASE_URL = \"http://192.168.1.155:9342/merchant/\";\n// const BASE_URL = \"/merchant/\";\nconst BASE_URL = '/api/'\n\nconst ORDER_STATUS_MAP: Record<number, string> = {\n  10: '创建',\n  20: '可执行',\n  30: '执行中',\n  40: '失败',\n  50: '成功'\n}\n\nconst PRODUCT_TYPE: Record<number, string> = {\n  10: '微信',\n  20: '支付宝',\n  30: 'QQ钱包',\n  40: '京东',\n  50: '银联'\n}\n\nexport { BASE_URL, ORDER_STATUS_MAP, PRODUCT_TYPE }\n","import axios from \"axios\";\nimport { BASE_URL } from \"../common/const\";\nimport { message } from \"antd\";\n\naxios.defaults.withCredentials = true;\naxios.defaults.baseURL = BASE_URL;\n\naxios.interceptors.response.use(\n  response => {\n    console.log(\n      `%creceived mock data from %c${response.config.url}`,\n      \"color:#00b586;\",\n      \"color:#e63d31;\"\n    );\n    console.log(response.data.t);\n    // if (response.data.status === \"SUCCESS\") {\n      return response.data.t;\n    // } else {\n    //   message.error(response.data.message);\n    //   return Promise.reject(response.data.message);\n    // }\n  },\n  error => {\n    message.error(\"Netword Error!!!\");\n    return Promise.reject(\"Network Error!!!\");\n  }\n);\n\nexport default axios;\n","import './style.less'\nimport React, { useContext, useEffect } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Card, Col, Row, Icon, Table, Badge, Tooltip, Tag, List, Avatar, Button } from 'antd'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport * as stores from '../../../store'\nimport axios from '../../../plugins/axios'\nimport { PRODUCT_TYPE } from '../../../common/const'\nimport { randomColor } from '../../../common/utils'\n\nconst columns = [\n  { title: '产品ID', dataIndex: 'productId', key: 'productId', width: '200px' },\n  {\n    title: '产品类型',\n    dataIndex: 'productType',\n    key: 'productType',\n    render: (type: number) => {\n      return (\n        <div>\n          <Tag\n            color={\n              ({\n                10: 'green',\n                20: 'blue',\n                30: 'cyan',\n                40: 'red',\n                50: 'purple'\n              } as Record<number, string>)[type]\n            }\n          >\n            {PRODUCT_TYPE[type]}\n          </Tag>\n        </div>\n      )\n    }\n  },\n  {\n    title: '总状态',\n    dataIndex: 'status',\n    key: 'status',\n    width: '200px',\n    render(text: string) {\n      return text ? (\n        <Badge status=\"processing\" text=\"已开启\" />\n      ) : (\n        <Badge status=\"error\" text=\"已关闭\" />\n      )\n    }\n  }\n]\n\ninterface IProps extends RouteComponentProps {}\ninterface IState {\n  dataSource: any\n}\n\nconst Information: React.FC<IProps> = props => {\n  const { userinfo } = useContext(stores.userStore)\n  const { loading, openLoading, closeLoading } = useContext(stores.uiStore)\n  const state = useLocalStore(\n    () =>\n      ({\n        dataSource: {}\n      } as IState)\n  )\n\n  useEffect(() => {\n    query()\n    // eslint-disable-next-line\n  }, [])\n  // 查询数据\n  const query = async () => {\n    openLoading()\n    state.dataSource = await axios.get('merchant/getMerchantInfo', {\n      params: {\n        id: userinfo.merchantId\n      }\n    })\n    closeLoading()\n  }\n  // 渲染table展开内容的方法\n  const expandedRowRender = (record: any) => {\n    const columns = [\n      {\n        title: '商户编号',\n        dataIndex: 'roadCode',\n        key: 'roadCode',\n        width: '200px'\n      },\n      { title: '商户名称', dataIndex: 'name', key: 'name' },\n      {\n        title: '状态',\n        dataIndex: 'status',\n        key: 'status',\n        width: '200px',\n        render(text: string) {\n          return text ? (\n            <Badge status=\"processing\" text=\"已开启\" />\n          ) : (\n            <Badge status=\"error\" text=\"已关闭\" />\n          )\n        }\n      }\n    ]\n\n    const roadList = record.road\n    const data = []\n    for (let i = 0; i < roadList.length; ++i) {\n      data.push(roadList[i])\n    }\n    return (\n      <Table\n        rowKey=\"roadCode\"\n        size=\"middle\"\n        columns={columns}\n        dataSource={data}\n        pagination={false}\n      />\n    )\n  }\n\n  let { account = [], product = [] } = state.dataSource\n\n  return (\n    <div>\n      <Row gutter={24}>\n        <Col xs={{ span: 24 }} xl={{ span: 12 }}>\n          <Card\n            hoverable\n            bodyStyle={{ height: '260px', marginBottom: '24px' }}\n            title=\"合作商信息\"\n            bordered={false}\n            loading={loading}\n          >\n            <p>\n              <span className=\"label\">合作商编号：</span>\n              <span className=\"value\">2018032610021</span>\n            </p>\n            <p>\n              <span className=\"label\">合作商名称：</span>\n              <span className=\"value\">阿里巴巴</span>\n            </p>\n            <p>\n              <span className=\"label\">联系人：</span>\n              <span className=\"value\">马云</span>\n            </p>\n            <p>\n              <span className=\"label\">联系电话：</span>\n              <span className=\"value\">10086</span>\n            </p>\n          </Card>\n        </Col>\n        <Col xs={{ span: 24 }} xl={{ span: 12 }}>\n          <Card\n            hoverable\n            bodyStyle={{ height: '260px', marginBottom: '24px' }}\n            title=\"结算卡信息\"\n            bordered={false}\n            loading={loading}\n          >\n            <p>\n              <span className=\"label\">持卡人：</span>\n              <span className=\"value\">马化腾</span>\n            </p>\n            <p>\n              <span className=\"label\">身份证：</span>\n              <span className=\"value\">110</span>\n            </p>\n            <p>\n              <span className=\"label\">银行卡：</span>\n              <span className=\"value\">119</span>\n            </p>\n            <p>\n              <span className=\"label\">银行：</span>\n              <span className=\"value\">杭州银行</span>\n            </p>\n            <p>\n              <span className=\"label\">支行：</span>\n              <span className=\"value\">西城支行</span>\n            </p>\n            <p>\n              <span className=\"label\">预留手机号：</span>\n              <span className=\"value\">120</span>\n            </p>\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={24}>\n        <Col xs={{ span: 24 }} xl={{ span: 16 }}>\n          <Card\n            hoverable\n            className=\"product-list\"\n            bodyStyle={{ marginBottom: '24px', overflow: 'auto' }}\n            title=\"产品列表\"\n            bordered={false}\n            loading={loading}\n          >\n            <Table\n              rowKey=\"productId\"\n              columns={columns}\n              expandedRowRender={expandedRowRender}\n              dataSource={product}\n              pagination={false}\n              size=\"middle\"\n              expandRowByClick={true}\n            />\n          </Card>\n        </Col>\n        <Col xs={{ span: 24 }} xl={{ span: 8 }}>\n          <Card\n            hoverable\n            bodyStyle={{ marginBottom: '24px', overflow: 'auto' }}\n            title={\n              <div>\n                <span>账号</span>\n                &nbsp;\n                <Tooltip placement=\"topLeft\" title=\"开通合作商下商户账号\" arrowPointAtCenter>\n                  <Icon type=\"question-circle-o\" />\n                </Tooltip>\n              </div>\n            }\n            extra={<Button type=\"link\">新建</Button>}\n            bordered={false}\n            loading={loading}\n            className=\"account\"\n          >\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={account.map((el: any) => {\n                return {\n                  name: el.name,\n                  account: el.account\n                }\n              })}\n              renderItem={(item: any) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={\n                      <Avatar\n                        style={{\n                          backgroundColor: randomColor()\n                        }}\n                      >\n                        {item.name}\n                      </Avatar>\n                    }\n                    title={<a href=\"/\">{item.name}</a>}\n                    description={item.account}\n                  />\n                </List.Item>\n              )}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default observer(Information)\n","import React, { useContext } from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Form, Icon, Input, Button, Table, Divider } from 'antd'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport * as stores from '../../../store'\nimport axios from '../../../plugins/axios'\n\nconst FormItem = Form.Item\n\nconst columns = [\n  {\n    title: '合作商订单号',\n    dataIndex: '1',\n    key: '1'\n  },\n  {\n    title: '订单ID',\n    dataIndex: '2',\n    key: '2'\n  },\n  {\n    title: '商户编号',\n    dataIndex: '3',\n    key: '3'\n  },\n  {\n    title: '商户名称',\n    dataIndex: '4',\n    key: '4'\n  },\n  {\n    title: '交易金额',\n    dataIndex: '5',\n    key: '5'\n  },\n  {\n    title: '订单状态',\n    dataIndex: '6',\n    key: '6'\n  },\n  {\n    title: '下单时间',\n    dataIndex: '7',\n    key: '7'\n  }\n]\n\ninterface IProps extends RouteComponentProps {}\ninterface IState {\n  dataSource: any\n  orderNo: string\n}\n\nconst OrderQuery: React.FC<IProps> = props => {\n  const { loading, openLoading, closeLoading } = useContext(stores.uiStore)\n  const state = useLocalStore(\n    () =>\n      ({\n        dataSource: [],\n        orderNo: ''\n      } as IState)\n  )\n\n  const handleInputChange = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    console.log(ev);\n    state.orderNo = ev.target.value\n  }\n\n  const handleSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    ev.preventDefault()\n    query()\n  }\n\n  const query = async () => {\n    openLoading()\n    await axios.get('/order-query', {\n      params: {\n        orderNo: state.orderNo\n      }\n    })\n    closeLoading()\n  }\n\n  return (\n    <div style={{ background: '#fff', padding: '24px' }}>\n      <Form layout=\"inline\" onSubmit={handleSubmit}>\n        <FormItem>\n          <Input\n            onChange={handleInputChange}\n            prefix={<Icon type=\"file-text\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n            placeholder=\"请输入合作商订单号\"\n          />\n        </FormItem>\n        <FormItem>\n          <Button loading={loading} disabled={!state.orderNo} type=\"primary\" htmlType=\"submit\">\n            查询\n          </Button>\n        </FormItem>\n      </Form>\n      <Divider dashed />\n      <Table loading={loading} dataSource={state.dataSource} columns={columns} size=\"middle\" />\n    </div>\n  )\n}\n\nexport default observer(OrderQuery)\n","import React, { useContext, useEffect } from 'react'\nimport { Form, Input, Button, DatePicker, Select, Table, Badge, Divider } from 'antd'\nimport { FormComponentProps } from 'antd/es/form'\nimport { ColumnProps } from 'antd/es/table'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport * as stores from '../../../store'\nimport axios from '../../../plugins/axios'\nimport { ORDER_STATUS_MAP } from '../../../common/const'\n\nconst FormItem = Form.Item\nconst Option = Select.Option\nconst { RangePicker } = DatePicker\n\n/*---------- 子组件区域 ----------*/\n\ninterface ISearchFormProps extends FormComponentProps {\n  onSubmit: (params: any) => any\n}\n\nconst SearchForm: React.FC<ISearchFormProps> = props => {\n  const { getFieldDecorator, validateFields } = props.form\n  const { loading } = useContext(stores.uiStore)\n  const handleSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    ev.preventDefault()\n    validateFields((err, values) => {\n      if (!err) {\n        props.onSubmit(values)\n      }\n    })\n  }\n\n  return (\n    <Form layout=\"inline\" onSubmit={handleSubmit}>\n      <FormItem label=\"产品名称\">\n        {getFieldDecorator('productCode', {\n          initialValue: '0'\n        })(\n          <Select style={{ width: 120 }} allowClear>\n            <Option value=\"0\">全部</Option>\n            <Option value=\"1\">product-1</Option>\n            <Option value=\"2\">product-2</Option>\n            <Option value=\"3\">product-3</Option>\n          </Select>\n        )}\n      </FormItem>\n      <FormItem label=\"合作商订单号\">{getFieldDecorator('merOrderNo')(<Input />)}</FormItem>\n      <FormItem label=\"本地订单号\">{getFieldDecorator('payOrderId')(<Input />)}</FormItem>\n      <FormItem label=\"商户编号\">{getFieldDecorator('roadCode')(<Input />)}</FormItem>\n      <FormItem label=\"商户名称\">{getFieldDecorator('merName')(<Input />)}</FormItem>\n      <FormItem label=\"交易时间\">\n        {getFieldDecorator('datetime')(\n          <RangePicker\n            showTime={{ format: 'HH:mm' }}\n            format=\"YYYY-MM-DD HH:mm\"\n            placeholder={['', '']}\n          />\n        )}\n      </FormItem>\n      <FormItem>\n        <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n          查询\n        </Button>\n      </FormItem>\n    </Form>\n  )\n}\n\nconst WrappedSearchForm = Form.create<ISearchFormProps>()(observer(SearchForm))\n\n/*---------- 父组件区域 ----------*/\n\nconst columns: ColumnProps<unknown>[] = [\n  {\n    title: '合作商订单号',\n    dataIndex: 'merOrderNo',\n    key: 'merOrderNo'\n  },\n  {\n    title: '本地订单号',\n    dataIndex: 'payOrderId',\n    key: 'payOrderId'\n  },\n  {\n    title: '商户编号',\n    dataIndex: 'roadCode',\n    key: 'roadCode'\n  },\n  {\n    title: '商户名称',\n    dataIndex: 'merName',\n    key: 'merName'\n  },\n  {\n    title: '交易金额（元）',\n    dataIndex: 'amount',\n    align: 'right',\n    width: 140,\n    key: 'amount'\n  },\n  {\n    title: '交易时间',\n    dataIndex: 'createTime',\n    align: 'center',\n    key: 'createTime'\n  },\n  {\n    title: '交易状态',\n    dataIndex: 'status',\n    align: 'left',\n    render: (status: number) => {\n      return (\n        <div>\n          <Badge\n            status={\n              ({\n                10: 'default',\n                20: 'warning',\n                30: 'processing',\n                40: 'error',\n                50: 'success'\n              } as Record<number, any>)[status]\n            }\n          />\n          {ORDER_STATUS_MAP[status]}\n        </div>\n      )\n    },\n    key: 'status'\n  }\n]\n\ninterface ITradeQueryState {\n  data: any\n  pagination: any\n}\n\nconst TradeQuery: React.FC = props => {\n  const { loading, openLoading, closeLoading } = useContext(stores.uiStore)\n  const state = useLocalStore(\n    () =>\n      ({\n        data: [],\n        pagination: {}\n      } as ITradeQueryState)\n  )\n\n  useEffect(() => {\n    query()\n    // eslint-disable-next-line\n  }, [])\n\n  const handleTableChange = (pagination: any, filters: any, sorter: any) => {\n    let pager = { ...state.pagination }\n    pager.current = pagination.current\n    state.pagination = pager\n    query({\n      results: pagination.pageSize\n    })\n  }\n\n  const query = (params = {}) => {\n    openLoading()\n    axios\n      .get('/trade-query', {\n        params: {\n          results: 10,\n          ...params\n        }\n      })\n      .then(data => {\n        const pagination = { ...state.pagination }\n        pagination.total = 200\n        state.data = data\n        state.pagination = pagination\n        closeLoading()\n      })\n  }\n\n  return (\n    <div style={{ background: '#fff', padding: '24px' }}>\n      <WrappedSearchForm onSubmit={query} />\n      <Divider dashed />\n      <Table\n        loading={loading}\n        columns={columns}\n        rowKey=\"id\"\n        dataSource={state.data}\n        pagination={state.pagination}\n        onChange={handleTableChange}\n      />\n    </div>\n  )\n}\n\nexport default observer(TradeQuery)\n","import React from 'react'\nimport { Form, Button, DatePicker, Timeline, Divider, Icon, Tooltip } from 'antd'\nimport { FormComponentProps } from 'antd/es/form'\nimport { observer } from 'mobx-react-lite'\n\nconst FormItem = Form.Item\n\ninterface ISearchFormProps extends FormComponentProps {}\n\nconst SearchForm: React.FC<ISearchFormProps> = props => {\n  const { getFieldDecorator, validateFields } = props.form\n\n  const handleSubmit = (ev: React.FormEvent<HTMLFormElement>) => {\n    ev.preventDefault()\n    validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values)\n      }\n    })\n  }\n  return (\n    <Form layout=\"inline\" onSubmit={handleSubmit}>\n      <FormItem label=\"日期\">{getFieldDecorator('date')(<DatePicker placeholder=\"\" />)}</FormItem>\n      <FormItem>\n        <Button type=\"primary\" htmlType=\"submit\">\n          查询\n        </Button>\n      </FormItem>\n    </Form>\n  )\n}\n\nconst WrappedSearchForm = Form.create<ISearchFormProps>()(observer(SearchForm))\n\nconst Reports: React.FC = props => {\n  return (\n    <div style={{ background: '#fff', padding: '24px' }}>\n      <WrappedSearchForm />\n      {/* <Divider /> */}\n      <Divider dashed />\n      <Timeline>\n        <Timeline.Item dot={<Icon type=\"clock-circle-o\" />} color=\"red\">\n          <Tooltip placement=\"right\" title=\"还未生成\">\n            <span style={{ color: '#999', cursor: 'not-allowed' }}>2018/4/26（今天）</span>\n          </Tooltip>\n        </Timeline.Item>\n        {new Array(10).fill(null).map((el, index) => (\n          <Timeline.Item key={index}>\n            <Tooltip placement=\"right\" title=\"201804112018032610021.csv\">\n              <span\n                onClick={() => {\n                  window.location.href = 'https://www.baidu.com'\n                }}\n                style={{ cursor: 'pointer' }}\n              >\n                2018/4/{new Date().getDate() - index - 1}\n              </span>\n            </Tooltip>\n          </Timeline.Item>\n        ))}\n      </Timeline>\n    </div>\n  )\n}\n\nexport default Reports\n","import './style.less'\nimport React, { useContext } from 'react'\nimport { Route, Redirect, RouteComponentProps } from 'react-router-dom'\nimport { Layout, Menu, Dropdown, Icon, Avatar, Modal, Input, BackTop, Button } from 'antd'\nimport { ClickParam } from 'antd/es/menu'\nimport { observer, useLocalStore } from 'mobx-react-lite'\nimport * as stores from '../../store'\n\nimport Information from './information' // 合作商户\nimport OrderQuery from './order-query' // 订单查询\nimport TradeQuery from './trade-query' // 交易查询\nimport Reports from './reports' // 报表导出\n\nconst { Header, Sider, Content } = Layout\n\nconst Home: React.FC<RouteComponentProps> = props => {\n  const { userinfo, cleanUserinfo } = useContext(stores.userStore)\n  const state = useLocalStore(() => ({\n    passwordModalVisible: false,\n    collapsed: false\n  }))\n\n  const toggle = () => {\n    state.collapsed = !state.collapsed\n  }\n  // 处理导航菜单click事件\n  const handleNavClick = ({ key }: ClickParam) => {\n    props.history.push(key)\n  }\n  // 处理下拉菜单click事件\n  const handleDropdownClick = ({ key }: ClickParam) => {\n    switch (key) {\n      case 'logout':\n        logout()\n        break\n      case 'password':\n        state.passwordModalVisible = true\n        break\n      default:\n        break\n    }\n  }\n  // 退出\n  const logout = () => {\n    cleanUserinfo()\n  }\n  // 修改密码\n  const changePassword = () => {}\n\n  if (Object.keys(userinfo).length === 0) {\n    return <Redirect to=\"/login\" />\n  }\n\n  return (\n    <Layout className=\"home\">\n      <Sider trigger={null} collapsible collapsed={state.collapsed}>\n        <div className=\"logo\" />\n        <Menu\n          theme=\"dark\"\n          mode=\"inline\"\n          defaultSelectedKeys={[props.location.pathname]}\n          onClick={handleNavClick}\n        >\n          <Menu.Item key=\"/information\">\n            <Icon type=\"user\" />\n            <span>合作商户</span>\n          </Menu.Item>\n          <Menu.Item key=\"/order-query\">\n            <Icon type=\"file-text\" />\n            <span>订单查询</span>\n          </Menu.Item>\n          <Menu.Item key=\"/trade-query\">\n            <Icon type=\"pay-circle-o\" />\n            <span>交易查询</span>\n          </Menu.Item>\n          <Menu.Item key=\"/reports\">\n            <Icon type=\"upload\" />\n            <span>报表导出</span>\n          </Menu.Item>\n        </Menu>\n      </Sider>\n      <Layout>\n        <Header style={{ background: '#fff', padding: 0 }}>\n          <Icon\n            className=\"trigger\"\n            type={state.collapsed ? 'menu-unfold' : 'menu-fold'}\n            onClick={toggle}\n          />\n          <div className=\"right-block\">\n            <Avatar\n              style={{ backgroundColor: '#25b685', marginRight: '10px' }}\n              src=\"https://avatars0.githubusercontent.com/u/24448924?s=460&v=4\"\n            />\n            <Dropdown\n              placement=\"bottomRight\"\n              overlay={\n                <Menu onClick={handleDropdownClick}>\n                  <Menu.Item key=\"password\">\n                    <span>修改密码</span>\n                  </Menu.Item>\n                  <Menu.Divider />\n                  <Menu.Item key=\"logout\">退出</Menu.Item>\n                </Menu>\n              }\n              trigger={['click']}\n            >\n              <Button type=\"link\">\n                {userinfo.name} <Icon type=\"down\" />\n              </Button>\n            </Dropdown>\n          </div>\n        </Header>\n        <Content\n          style={{\n            margin: '24px'\n          }}\n        >\n          <Route path=\"/information\" component={Information} />\n          <Route path=\"/order-query\" component={OrderQuery} />\n          <Route path=\"/trade-query\" component={TradeQuery} />\n          <Route path=\"/reports\" component={Reports} />\n        </Content>\n      </Layout>\n      <Modal\n        title=\"修改密码\"\n        width=\"360px\"\n        visible={state.passwordModalVisible}\n        okText=\"修改\"\n        cancelText=\"取消\"\n        onOk={changePassword}\n        onCancel={() => {\n          state.passwordModalVisible = false\n        }}\n      >\n        <Input type=\"password\" placeholder=\"旧密码\" />\n        <br />\n        <br />\n        <Input type=\"password\" placeholder=\"新密码\" />\n        <br />\n        <br />\n        <Input type=\"password\" placeholder=\"确认密码\" />\n      </Modal>\n      <BackTop />\n    </Layout>\n  )\n}\n\nexport default observer(Home)\n","import './style.less'\nimport React, { useContext } from 'react'\nimport { Redirect, RouteComponentProps } from 'react-router-dom'\nimport { observer } from 'mobx-react-lite'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'\nimport { FormComponentProps } from 'antd/es/form'\nimport * as stores from '../../store'\nimport axios from '../../plugins/axios'\n\nconst FormItem = Form.Item\n\ninterface ILoginProps extends RouteComponentProps, FormComponentProps {}\n\nconst Login: React.FC<ILoginProps> = props => {\n  const { userinfo, saveUserinfo } = useContext(stores.userStore)\n  const { loading, openLoading, closeLoading } = useContext(stores.uiStore)\n  const { getFieldDecorator, validateFields } = props.form\n  // 处理提交\n  const handleSubmit = (ev: React.FormEvent) => {\n    ev.preventDefault()\n    validateFields((err: any, values: any) => {\n      if (!err) login(values)\n    })\n  }\n  // 登录处理\n  const login = (values: any) => {\n    let { account, password } = values\n\n    openLoading()\n\n    axios\n      .post('auth/login', {\n        account,\n        password\n      })\n      .then(res => {\n        saveUserinfo(res)\n        closeLoading()\n      })\n  }\n  // 已经登录则重定向到首页\n  if (Object.keys(userinfo).length > 0) {\n    return <Redirect to=\"/\" />\n  }\n\n  return (\n    <div className=\"login\">\n      <Form onSubmit={handleSubmit} className=\"login-form\">\n        <FormItem>\n          {getFieldDecorator('account', {\n            rules: [{ required: true, message: 'Please input your username!' }],\n            initialValue: 'admin'\n          })(\n            <Input\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('password', {\n            rules: [{ required: true, message: 'Please input your Password!' }],\n            initialValue: '123456'\n          })(\n            <Input\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              type=\"password\"\n              placeholder=\"\"\n            />\n          )}\n        </FormItem>\n\n        <FormItem>\n          {getFieldDecorator('remember', {\n            valuePropName: 'checked',\n            initialValue: true\n          })(<Checkbox>Remember me</Checkbox>)}\n        </FormItem>\n\n        <FormItem>\n          <Button loading={loading} type=\"primary\" htmlType=\"submit\">\n            Log in\n          </Button>\n        </FormItem>\n      </Form>\n    </div>\n  )\n}\n\nconst WrappedLogin = Form.create<ILoginProps>()(observer(Login))\n\nexport default WrappedLogin\n","import * as React from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport './mock'\nimport Home from './views/home'\nimport Login from './views/login'\n\nconst App: React.FC = props => {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/\" component={Home} />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.less';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}